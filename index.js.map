{"version":3,"file":"index.js","sources":["src/helpers/validateInitialValue.ts","src/hooks/useSortable/index.ts"],"sourcesContent":["/**\n * The validator function returns\n * - input array for array or object that can be change to a array\n * - [] for other\n *\n * @param {any} initialValue\n *              Value to be validated\n *\n * @return {Array}\n *         input array or [] for wrong input\n *\n * @example\n *        const validatedInitialValue = validateInitialValue(initialValue);\n */\nexport const validateInitialValue = (initialValue: any): Array<any> => {\n  if (\n    typeof initialValue === 'object' &&\n    initialValue !== null &&\n    !Array.isArray(initialValue)\n  ) {\n    console.log(\n      'you have passed a object when a array is required. It still may work however. Please pass a array.',\n    );\n    initialValue = [...initialValue];\n  }\n  if (!Array.isArray(initialValue)) {\n    console.log(\n      'you really want to break the validation. Please pass a array as parameter. Defaulting to [].',\n    );\n    initialValue = [];\n  }\n\n  return initialValue;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { validateInitialValue } from '../../helpers/validateInitialValue';\n\ntype IUseSortable = {\n  items: Array<any>;\n  requestSort: (key: string, direction: string) => void;\n  requestSearch: (search: string, value: string) => void;\n  requestBookMark: (id: string | number) => void;\n};\n\ntype Config = {\n  key: string;\n  direction: string;\n  bookMarks: Array<any>;\n  search: string;\n  value: string;\n};\n\n/**\n * Classic sort & search example to help understand the flow of this npm package\n *\n * @param    {Array} initialValue\n *           initial sort & search value\n *\n * @param    {Config} config\n *           initial config for sort & search in initialValue\n *\n * @return   {Array}\n *           array with sort & search and methods\n *\n * @property {Array} items\n *           The current array that sort & search\n *\n * @property {(key: string | number, direction: string) => void} requestSort\n *           the request for Sort function that get what Key you want to sort and direction\n *           direction can be \"ascending\" or \"descending\"\n *           defult value of direction is \"ascending\"\n *\n * @property {(search: string | number, value: string | number) => void} requestSearch\n *           the request for Search function that get Search for what Key you want search and value\n *\n * @property {(id: string | number) => void} requestBookMark\n *           the request for BookMark function that get what Id you want to book mark and set top of you array\n *\n * @example\n *   const ExampleComponent = () => {\n *     const myArray = [{\n *        id: 1,\n *        name: \"Saber\",\n *        family: \"Pourrahimi\"\n *        ...\n *     },\n *     {\n *        id: 2,\n *        name: \"Maryam\",\n *        family: \"Mirzayee\"\n *        ...\n *     }]\n *     const { items, requestSort, requestSearch, requestBookMark } = useSortable(myArray);\n *\n *     return (\n *       <>\n *         <table>\n *           <tr>\n *             <td>Id</td>\n *             <td>Name</td>\n *             <td>Family</td>\n *           </tr>\n *           {items.map(el => (\n *              <tr onClick={() => requestBookMark(el.id)}>\n *                <td>{el.id}</td>\n *                <td>{el.name}</td>\n *                <td>{el.family}</td>\n *              </tr>\n *           ))}\n *         </table>\n *         <button onClick={() => requestSort(\"name\", \"ascending\")}>Sort ascending myArray by name</button>\n *         <input onChange={(e) => requestSearch(\"name\", e.target.value)}>Search name in myArray</button>\n *         <input onChange={(e) => requestSearch(\"family\", e.target.value)}>Search family in myArray</button>\n *       </>\n *      )\n *    }\n */\nexport const useSortable = (\n  items: Array<any>,\n  config: Config = {\n    bookMarks: [],\n    key: '',\n    direction: '',\n    search: '',\n    value: '',\n  },\n): IUseSortable => {\n  const validatedInitialValue = validateInitialValue(items);\n\n  const [sortConfig, setSortConfig] = useState<Config>(config);\n  const bookMarkList = JSON.parse(window.localStorage.getItem('book-mark') || '[]');\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...validatedInitialValue];\n    if (sortConfig !== null && sortConfig.key !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    if (sortConfig !== null && sortConfig.search && sortConfig.value) {\n      const searchValue = sortConfig.value.toLowerCase();\n      sortableItems = sortableItems\n        .filter((item) => {\n          const field = item[sortConfig.search];\n          if (field === undefined || field === null) return false;\n          return String(field).toLowerCase().includes(searchValue);\n        })\n        .sort((a, b) => {\n          const aField = String(a[sortConfig.search]).toLowerCase();\n          const bField = String(b[sortConfig.search]).toLowerCase();\n          const aIndex = aField.indexOf(searchValue);\n          const bIndex = bField.indexOf(searchValue);\n          if (aIndex > bIndex) return 1;\n          if (aIndex < bIndex) return -1;\n          if (aField > bField) return 1;\n          return -1;\n        });\n    }\n    if (sortConfig.bookMarks && sortConfig.bookMarks.length) {\n      const uniqueBookMarks = Array.from(new Set(sortConfig.bookMarks));\n      sortableItems.sort((x, y) => {\n        const xIndex = uniqueBookMarks.indexOf(x.id);\n        const yIndex = uniqueBookMarks.indexOf(y.id);\n        if (xIndex === -1 && yIndex === -1) return 0;\n        if (xIndex === -1) return 1;\n        if (yIndex === -1) return -1;\n        return xIndex - yIndex;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key: string, direction?: string) => {\n    let newDirection = direction;\n    if (!newDirection) {\n      if (sortConfig && sortConfig.key === key) {\n        newDirection =\n          sortConfig.direction === 'ascending' ? 'descending' : 'ascending';\n      } else {\n        newDirection = sortConfig.direction || 'ascending';\n      }\n    }\n    const params = new URLSearchParams(window.location.search);\n    params.set('sort', key.toString());\n    params.set('d', newDirection);\n    const URL =\n      params.toString().indexOf('null') > 0\n        ? `${window.location.pathname}`\n        : `${window.location.pathname}?${params.toString()}`;\n    window.history.replaceState({}, '', URL);\n    setSortConfig({\n      ...sortConfig,\n      key: key.toString() && key.toString(),\n      direction: newDirection,\n    });\n  };\n\n  const requestSearch = (search: string, value: string) => {\n    setSortConfig({\n      ...sortConfig,\n      search: search && search.toString(),\n      value: value && value.toString(),\n    });\n  };\n\n  const requestBookMark = (id: string | number) => {\n    setSortConfig((prev) => {\n      const bookMarks = Array.from(new Set([...prev.bookMarks, id]));\n      window.localStorage.setItem('book-mark', JSON.stringify(bookMarks));\n      return { ...prev, bookMarks };\n    });\n  };\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const URLsort = params.get('sort') || '';\n    const URLd = params.get('d') || '';\n    requestSort(URLsort, URLd);\n    setSortConfig({\n      ...sortConfig,\n      key: URLsort,\n      direction: URLd,\n      bookMarks: Array.from(new Set(bookMarkList)),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { items: sortedItems, requestSort, requestSearch, requestBookMark };\n};\n\nuseSortable.defaultProps = {\n  config: {\n    bookMarks: [],\n    key: '',\n    direction: '',\n    search: '',\n    value: '',\n  },\n};\n"],"names":["useState","useMemo","useEffect"],"mappings":"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"}